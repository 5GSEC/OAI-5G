#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface BUILD service
#   Valid for Rocky 8.7
#
#---------------------------------------------------------------------

ARG BASE_IMAGE=docker.io/rockylinux:8.7
FROM ran-base:latest AS gnb-base

FROM ran-build:latest AS gnb-build

RUN python3 ./docker/scripts/generateTemplate.py ./docker/scripts/gnb_parameters.yaml && \
    cp /oai-ran/docker/scripts/gnb_entrypoint.sh /oai-ran/docker/scripts/entrypoint.sh

#start from scratch for target executable
FROM $BASE_IMAGE as oai-gnb
ENV TZ=Europe/Paris

RUN dnf update -y && \
    dnf install -y \
        procps-ng \
        libXpm \
        libX11 \
        atlas \
        lksctp-tools \
        tzdata \
        gdb \
        python3 \
        python3-pip \
        net-tools \
        iputils && \
    pip3 install six && \
    pip3 install requests && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/local-lib.conf && \
    echo "/usr/local/lib64" >> /etc/ld.so.conf.d/local-lib.conf

WORKDIR /opt/oai-gnb/bin
COPY --from=gnb-build \
    /oai-ran/cmake_targets/ran_build/build/nr-softmodem \
    /oai-ran/docker/scripts/entrypoint.sh \
    ./

COPY --from=gnb-build \
    /oai-ran/cmake_targets/ran_build/build/liboai_eth_transpro.so \
    /oai-ran/cmake_targets/ran_build/build/librfsimulator.so \
    /oai-ran/cmake_targets/ran_build/build/liboai_usrpdevif.so \
    /oai-ran/cmake_targets/ran_build/build/libcoding.so \
    /oai-ran/cmake_targets/ran_build/build/libparams_libconfig.so \
    /oai-ran/cmake_targets/ran_build/build/libdfts.so \
    /oai-ran/cmake_targets/ran_build/build/libldpc.so \
    /oai-ran/cmake_targets/ran_build/build/libldpc_optim.so \
    /oai-ran/cmake_targets/ran_build/build/libldpc_optim8seg.so \
    /oai-ran/cmake_targets/ran_build/build/libldpc_orig.so \
    /oai-ran/cmake_targets/ran_build/build/libtelnetsrv.so \
    /oai-ran/cmake_targets/ran_build/build/libtelnetsrv_ci.so \
    /usr/local/lib/

COPY --from=gnb-base \
    /lib64/libconfig.so.9 \
    /lib64/libforms.so.2 \
    /lib64/libblas.so.3 \
    /lib64/liblapack.so.3 \
    /lib64/liblapacke.so.3 \
    /lib64/libboost_chrono.so.1.66.0 \
    /lib64/libboost_date_time.so.1.66.0 \
    /lib64/libboost_filesystem.so.1.66.0 \
    /lib64/libboost_program_options.so.1.66.0 \
    /lib64/libboost_serialization.so.1.66.0 \
    /lib64/libboost_thread.so.1.66.0 \
    /lib64/libboost_system.so.1.66.0 \
    /lib64/libboost_unit_test_framework.so.1.66.0 \
    /lib64/libboost_atomic.so.1.66.0 \
    /lib64/libboost_timer.so.1.66.0 \
    /lib64/libboost_regex.so.1.66.0 \
    /lib64/libicudata.so.60 \
    /lib64/libicui18n.so.60 \
    /lib64/libicuuc.so.60 \
    /lib64/

# Now we are copying from builder-image the UHD files.
COPY --from=gnb-base /usr/local/bin/uhd_find_devices /usr/local/bin
COPY --from=gnb-base /usr/local/lib64/libuhd.so.4.4.0 /usr/local/lib64
COPY --from=gnb-base /usr/local/lib64/uhd/utils/uhd_images_downloader.py /opt/oai-gnb/bin

WORKDIR /usr/local/share/uhd/rfnoc
COPY --from=gnb-base /usr/local/share/uhd/rfnoc/ .

RUN /bin/bash -c "ln -s /usr/local/lib/liboai_usrpdevif.so /usr/local/lib/liboai_device.so" && \
    ldconfig && \
    echo "ldd on nr-softmodem" && ldd /opt/oai-gnb/bin/nr-softmodem && \
    echo "ldd on liboai_eth_transpro" && ldd /usr/local/lib/liboai_eth_transpro.so && \
    echo "ldd on librfsimulator" && ldd /usr/local/lib/librfsimulator.so && \
    echo "ldd on liboai_usrpdevif" && ldd /usr/local/lib/liboai_usrpdevif.so && \
    echo "ldd on libcoding" && ldd /usr/local/lib/libcoding.so && \
    echo "ldd on libparams_libconfig" && ldd /usr/local/lib/libparams_libconfig.so && \
    echo "ldd on libdfts" && ldd /usr/local/lib/libdfts.so && \
    echo "ldd on libldpc" && ldd /usr/local/lib/libldpc.so && \
    echo "ldd on libldpc_optim" && ldd /usr/local/lib/libldpc_optim.so && \
    echo "ldd on libldpc_optim8seg" && ldd /usr/local/lib/libldpc_optim8seg.so && \
    echo "ldd on libldpc_orig" && ldd /usr/local/lib/libldpc_orig.so && \
    echo "ldd on libtelnetsrv" && ldd /usr/local/lib/libtelnetsrv.so && \
    echo "ldd on libtelnetsrv_ci" && ldd /usr/local/lib/libtelnetsrv_ci.so

# Copy the relevant configuration files for gNB
WORKDIR /opt/oai-gnb/etc
COPY --from=gnb-build /oai-ran/docker/etc .

WORKDIR /opt/oai-gnb
#EXPOSE 2152/udp  # S1U, GTP/UDP
#EXPOSE 22100/tcp # ?
#EXPOSE 36412/udp # S1C, SCTP/UDP
#EXPOSE 36422/udp # X2C, SCTP/UDP
#EXPOSE 50000/udp # IF5 / ORI (control)
#EXPOSE 50001/udp # IF5 / ECPRI (data)

ENTRYPOINT ["/opt/oai-gnb/bin/entrypoint.sh"]
CMD ["/opt/oai-gnb/bin/nr-softmodem", "-O", "/opt/oai-gnb/etc/gnb.conf"]
